% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Backend-class.R, R/BackendMzR-class.R
\name{Backend}
\alias{Backend}
\alias{Backend-class}
\alias{BackendMzR-class}
\alias{backendInitialize}
\alias{backendImportData}
\alias{backendReadSpectra}
\alias{backendWriteSpectra}
\alias{BackendMemory-class}
\alias{BackendMzR}
\title{Mass spectrometry data managing backends}
\usage{
BackendMzR()
}
\description{
[MSnExperiment-class] objects support the use of different backends to
manage and access mass spectrometry data. Backends can be generally
classified into *in-memory* and *on-disk* backends. In-memory backends keep
all the (spectra) data in memory ensuring fast data access. On-disk backends
do not keep any data in memory but fetch the requested spectrum data only on
demand, applying eventual data manipulations on-the-fly. Due to their minimal
memory demand, on-disk backends support also loading and analyzing very large
MS experiments.

Available backends in `MSnbase` are listed in the sections following the
backend method description.
}
\section{Backend method descriptions}{


- `backendInitialize`: initialize the backend.

- `backendImportData`: performs an initial data import if the data is kept
  in memory or if another intermediate data container (such as HDF5 files)
  are used.

- `backendReadSpectra`: read spectrum data from the backend for the
  specified file and given the spectrum metadata provided with argument
  `spectraData`. A subset of spectra from a MS file can be retrieved by
  passing only the spectra metadata for the requested spectra with the
  `spectraData` argument. Column `"spIdx"` in `spectraData` identifies the
  spectra to return.

- `backendWriteSpectra`: writes spectrum to the backend, e.g. after data
  manipulations are performed.
}

\section{BackendMemory}{


sgibb: please describe
}

\section{BackendMzR}{


The `BackendMzR` uses the original MS data files (such as *mzML*, *mzXML* or
*CDF* files) as backend and reads the data on demand from these files. This
ensures a low memory footprint and enables thus the analysis also of very
large experiments - at the cost of a slightly lower performance. New
backends can be created with the `BackendMzR` function.

The `BackendMzR` does not support/implement the `backendInitialize`,
`backendImportData` and `backendWriteSpectra` functions.
}

\section{Backend creation and initiation}{

}

\author{
Sebastian Gibb, Johannes Rainer
}
